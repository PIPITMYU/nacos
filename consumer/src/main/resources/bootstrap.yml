log:
  level: DEBUG
server:
  port: 8900
  servlet:
    context-path: /demo
spring:
  application:
    ## 指定服务名称，在nacos中的名字
    name: consumer
  profiles:
    active: dev
  cloud:
    nacos:
      discovery:
        #nacos的服务地址，nacos-server中IP地址:端口号
        server-addr: 127.0.0.1:8848
      config:
        server-addr: 127.0.0.1:8848
        #配置内容的数据格式，目前只支持 properties 和 yaml 类型，
        #这个和 dataId有关-> ${prefix(spring-application-name)}-${spring.profiles.active}.${file-extension}
        file-extension: yml
        namespace: 0a6538f6-cefc-47c9-9a60-c398fd3432e3
        group: consumer_group
        ## 共享配置，List集合，可以配置多个
        shared-configs: ## dataId：配置文件的dataId，必须带有后缀 -
          - dataId: share-config1.yml
          ## refresh：指定是否能够动态刷新，默认是false
            refresh: true
          - dataId: share-config2.yml
            ## 指定配置文件的分组，默认是DEFAULT_GROUP
            group: consumer_group
            refresh: true
    sentinel:
      # 取消控制台懒加载，项目启动即连接Sentinel
      eager: true
      transport:
        #这里的 spring.cloud.sentinel.transport.port
        #端口配置会在应用对应的机器上启动一个 Http Server，
        #该 Server 会与 Sentinel 控制台做交互。
        #比如 Sentinel 控制台添加了一个限流规则，会把规则数据 push 给这个 Http Server 接收，Http Server 再将规则注册到 Sentinel 中
        port: 8001
        # 指定控制台的地址
        dashboard: 127.0.0.1:8000
      ## nacos持久化配置
      datasource:
      ## 配置流控规则，名字任意
        ds-flow:
          nacos:
          ## nacos的地址
            server-addr: 127.0.0.1:8848
            namespace: 0a6538f6-cefc-47c9-9a60-c398fd3432e3
            ## 配置ID
            dataId: ${spring.application.name}-flow
            ## 配置分组，默认是DEFAULT_GROUP
            groupId: consumer
            ## 配置存储的格式
            data-type: json
            ## rule-type设置对应得规则类型，总共七大类型，在 com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现
            rule-type: flow
        ## 配置降级规则，名字任意
        ds-degrade:
          nacos:
          ## nacos的地址
            server-addr: 127.0.0.1:8848
            namespace: 0a6538f6-cefc-47c9-9a60-c398fd3432e3
            ## 配置ID
            dataId: ${spring.application.name}-degrade
            ## 配置分组，默认是DEFAULT_GROUP
            groupId: consumer
            ## 配置存储的格式
            data-type: json
            ## rule-type设置对应得规则类型，总共七大类型，在 com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现
            rule-type: degrade
feign:
  #熔断降级
  sentinel:
    enabled: true
  client:
    httpclient:
      # 开启 Http Client
      enabled: true
    config:
      ## default 设置的全局超时时间，指定服务名称可以设置单个服务的超时时间
      default:
        connectTimeout: 5000
        readTimeout: 5000
      ## 为provider这个服务单独配置超时时间
      provider:
        connectTimeout: 30000
        readTimeout: 30000
  ## 开启压缩
  compression:
    request:
      enabled: true
      ## 开启压缩的阈值，单位字节，默认2048，即是2k，这里为了演示效果设置成10字 节
      min-request-size: 10
      mime-types: text/xml,application/xml,application/json
    response:
      enabled: true
## 客户端seata的相关配置
seata:
  ## 是否开启seata，默认true
  enabled: true
  application-id: ${spring.application.name}
  ## seata事务组的名称，一定要和config.tx(nacos)中配置的相同，示例中需要添加
  ## service.vgroupMapping.consumer-tx-group=default 配置文件
  tx-service-group: ${spring.application.name}-tx-group
  ## 配置中心的配置
  config:
  ## 使用类型nacos
    type: nacos
    ## nacos作为配置中心的相关配置，需要和server在同一个注册中心下
    nacos:
      ## 命名空间，需要server端(registry和config)、nacos配置client端 (registry和config)保持一致
      namespace: 0a6538f6-cefc-47c9-9a60-c398fd3432e3
      ## 地址
      server-addr: localhost:8848
      ## 组， 需要server端(registry和config)、nacos配置client端 (registry和config)保持一致
      group: SEATA_GROUP
      ## 用户名和密码
      username: nacos
      password: nacos
  registry:
    type: nacos
    nacos:
      ## 这里的名字一定要和seata服务端中的名称相同，默认是seata-server
      application: seata-server
      ## 需要server端(registry和config)、nacos配置client端(registry和 config)保持一致
      group: SEATA_GROUP
      namespace: 0a6538f6-cefc-47c9-9a60-c398fd3432e3
      username: nacos
      password: nacos
      server-addr: localhost:8848
logging:
  config: classpath:logback-spring.xml
server-url:
  nacos-provider: http://provider
management:
  endpoints:
    web:
      exposure: ## yml文件中存在特殊字符，必须用单引号包含，否则启动报错
        include: '*'